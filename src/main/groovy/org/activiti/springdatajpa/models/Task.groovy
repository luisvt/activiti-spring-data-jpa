package org.activiti.springdatajpa.models

import com.fasterxml.jackson.annotation.JsonIdentityInfo
import com.fasterxml.jackson.annotation.JsonIgnore
import com.fasterxml.jackson.annotation.ObjectIdGenerators
import org.activiti.engine.task.DelegationState
import org.activiti.springdatajpa.models.enums.SuspensionState

// Generated Nov 21, 2015 11:41:58 AM by Hibernate Tools 3.2.2.GA
import javax.persistence.*

import static javax.persistence.EnumType.STRING
import static org.activiti.springdatajpa.models.enums.IdentityLinkType.candidate

/**
 * Task generated by hbm2java
 */
@Entity
@Table(name = "act_ru_task")
@JsonIdentityInfo(generator = ObjectIdGenerators.UUIDGenerator)
public class Task {

    public static final String DELETE_REASON_COMPLETED = "completed";
    public static final String DELETE_REASON_DELETED = "deleted";

    /**
     * Default value used for priority when a new {@link Task} is created.
     */
    public static int DEFAULT_PRIORITY = 50;

    public Task() {
    }

    public Task(String id) {
        this.id = id;
    }

    @Id
    @Column(name = "id_", unique = true, nullable = false, length = 64)
    String id

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "proc_def_id_")
    ProcessDefinition processDefinition

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "execution_id_")
    Execution execution

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "proc_inst_id_")
    Execution processInstance

    @Column(name = "rev_")
    Integer rev

    @Column(name = "name_")
    String name

    @Column(name = "parent_task_id_", length = 64)
    String parentTaskId

    @Column(name = "description_", length = 4000)
    String description

    @Column(name = "task_def_key_")
    String taskDefKey

    @Column(name = "owner_")
    String owner

    @Column(name = "assignee_")
    String assignee

    @Column(name = "delegation_", length = 64)
    @Enumerated(STRING)
    DelegationState delegationState

    @Column(name = "priority_")
    Integer priority = DEFAULT_PRIORITY

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "create_time_", length = 29)
    Date createTime

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "due_date_", length = 29)
    Date dueDate

    @Column(name = "category_")
    String category

    @Column(name = "suspension_state_")
    @Enumerated
    SuspensionState suspensionState

    @Column(name = "tenant_id_")
    String tenantId

    @Column(name = "form_key_")
    String formKey

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "task")
    Set<IdentityLink> identityLinks

    @Transient
    @JsonIgnore
    Set<IdentityLink> getCandidates() {
        identityLinks.findAll { it.type == candidate }
    }

    @Transient
    @JsonIgnore
    Boolean isCandidate(User user) {
        candidates == null ||
        candidates.isEmpty() ||
        candidates.any({
            it.userId == user.username ||
                    user.authorities.any({
                        authority -> authority.authority == it.groupId
                    })})
    }

    @Transient
    private Map<String, Object> processVariables

    Map<String, Object> getProcessVariables() {
        processInstance?.processVariables ?: processVariables
    }

    void setProcessVariables(Map<String, Object> processVariables) {
        this.processVariables = processVariables
        if(processInstance != null) processInstance.processVariables = processVariables
    }
}


